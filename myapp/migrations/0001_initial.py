# Generated by Django 5.1.6 on 2025-07-27 18:35

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('brand_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('brand_name', models.CharField(max_length=255, unique=True)),
                ('brand_photo', models.URLField()),
            ],
            options={
                'db_table': 'car_brands',
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('category_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'service_categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('service_photo', models.URLField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='myapp.servicecategory')),
                ('tags', models.ManyToManyField(blank=True, related_name='services', to='myapp.tag')),
            ],
            options={
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('profile_photo', models.URLField()),
                ('user_type', models.CharField(choices=[('client', 'Client'), ('supplier', 'Supplier')], max_length=20)),
                ('business_address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, choices=[('Bucharest', 'Bucharest'), ('Cluj-Napoca', 'Cluj-Napoca'), ('Timișoara', 'Timișoara'), ('Iași', 'Iași'), ('Constanța', 'Constanța'), ('Craiova', 'Craiova'), ('Brașov', 'Brașov'), ('Galați', 'Galați'), ('Ploiești', 'Ploiești'), ('Oradea', 'Oradea')], max_length=50, null=True)),
                ('sector', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('availability_days', models.TextField(blank=True, null=True)),
                ('availability_times', models.TextField(blank=True, null=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_users', to='myapp.user')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='SupplierBrandService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('city', models.CharField(blank=True, choices=[('Bucharest', 'Bucharest'), ('Cluj-Napoca', 'Cluj-Napoca'), ('Timișoara', 'Timișoara'), ('Iași', 'Iași'), ('Constanța', 'Constanța'), ('Craiova', 'Craiova'), ('Brașov', 'Brașov'), ('Galați', 'Galați'), ('Ploiești', 'Ploiești'), ('Oradea', 'Oradea')], max_length=50, null=True)),
                ('sector', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('photo_url', models.URLField()),
                ('active', models.BooleanField(default=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand_services', to='myapp.carbrand')),
                ('services', models.ManyToManyField(related_name='supplier_brand_services', to='myapp.service')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_services', to='myapp.user')),
            ],
            options={
                'db_table': 'supplier_brand_services',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_and_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('cancelled', 'Cancelled'), ('finished', 'Finished')], default='pending', max_length=20)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='myapp.supplierbrandservice')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_schedules', to='myapp.user')),
                ('requested_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_schedules', to='myapp.user')),
            ],
            options={
                'db_table': 'schedules',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_reviews', to='myapp.user')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_reviews', to='myapp.user')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('status', models.CharField(choices=[('accepted', 'Accepted'), ('rejected', 'Rejected'), ('expired', 'Expired')], max_length=20)),
                ('phone_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('reason', models.TextField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_requests', to='myapp.user')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_requests', to='myapp.user')),
            ],
            options={
                'db_table': 'requests',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('appointment_reminder', 'Appointment Reminder'), ('new_message', 'New Message'), ('supplier_approval', 'Supplier Approval'), ('subscription_reminder', 'Subscription Reminder'), ('subscription_expiry', 'Subscription Expiry')], max_length=50)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to='myapp.user')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to='myapp.user')),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
    ]
